{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACN;;AAElC;AACA;AACA,uBAAuB,yDAAO;AAC9B,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,yDAAO;AAChB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,sCAAsC,QAAQ;AAC9C;AACA;;AAEA,sCAAsC,EAAE,2BAA2B,EAAE;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,yBAAyB,yDAAO;;AAEhC;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kBAAkB,yDAAO;;AAEzB;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,kCAAkC,yDAAO;AACzC;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,6BAA6B,eAAe;AAC5C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qFAAqF,yDAAO;AAC5F;;AAEA;AACA;;AAEA,sDAAsD,6BAA6B;AACnF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,4BAA4B,yDAAO;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,yBAAyB;AAC7C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,yDAAO;AACzC;;AAEA;AACA,kCAAkC,yDAAO;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gCAAgC,yDAAO;AACvC,6BAA6B,yDAAO;AACpC,mCAAmC,yDAAO;AAC1C;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,kBAAkB;AACtC;AACA;AACA;;AAEA,UAAU,yDAAO;AACjB;AACA,wCAAwC,yDAAO;AAC/C,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,kCAAkC,yDAAO;AACzC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,0CAA0C,wDAAwD;AAClG;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,8BAA8B,yDAAO;AACrC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,0BAA0B,yDAAO;AACjC;AACA;AACA;AACA;;AAEA,qBAAqB,qBAAqB;AAC1C;AACA;AACA;;AAEA;;AAEA,0BAA0B,iBAAiB;AAC3C;AACA;AACA;;AAEA,8BAA8B,kBAAkB;AAChD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,4BAA4B,yDAAO;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,oBAAoB,iBAAiB;AACrC;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,yDAAO;AACvD;;AAEA;AACA,kCAAkC,yDAAO;AACzC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,2CAA2C,yDAAO;AAClD;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,sCAAsC,qBAAqB;AAC3D;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,sBAAsB,yDAAO;AAC7B,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,wBAAwB,yDAAO;AAC/B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,oBAAoB,OAAO;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,SAAS;AACzB;;AAEA;AACA;;AAEA;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA,uDAAuD,yDAAO;AAC9D;;AAEA;AACA;AACA;;AAEA;AACA,4BAA4B,yDAAO;AACnC;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,wBAAwB,yDAAO;AAC/B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;AAED;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,CAAC;;AAED;;AAEA;AACA,EAAE,gDAAS;;AAEX;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;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;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,8CAA8C;AACnE;AACA;AACA,qBAAqB,aAAa;AAClC;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+EAA+E,SAAS,gBAAgB;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;UCjXF;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNwC;AACwB;AAChE,0BAA0B,qFAAmC;AAC7D;AACA,QAAQ,QAAQ,yDAAO,KAAK;AAC5B,QAAQ,QAAQ,yDAAO,WAAW,yDAAO,IAAI;AAC7C,SAAS,QAAQ,yDAAO,WAAW,yDAAO,IAAI;AAC9C,QAAQ,QAAQ,yDAAO,WAAW,yDAAO,IAAI;AAC7C,QAAQ,QAAQ,yDAAO,WAAW,yDAAO,IAAI;AAC7C,OAAO,QAAQ,yDAAO,WAAW,yDAAO;AACxC;AACA,uBAAuB,UAAU,yDAAO,eAAe,yDAAO,eAAe,yDAAO,cAAc,yDAAO,cAAc,yDAAO,aAAa,yDAAO;AAClJ;AACA,OAAO,QAAQ,yDAAO,cAAc,yDAAO,eAAe,yDAAO,iBAAiB,yDAAO,OAAO;AAChG,OAAO,QAAQ,yDAAO,cAAc,yDAAO,gBAAgB,yDAAO,iBAAiB,yDAAO,iBAAiB,yDAAO;AAClH;AACA,gBAAgB,eAAe;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,iBAAiB,mCAAmC;AACpD;AACA,+CAA+C,yDAAO;AACtD;AACA;AACA;AACA,iBAAiB,mCAAmC;AACpD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,K","sources":["webpack://lib/./node_modules/@antimatter-dimensions/notations/dist/ad-notations.esm.js","webpack://lib/./node_modules/break_infinity.js/dist/break_infinity.esm.js","webpack://lib/./node_modules/pad-end/index.js","webpack://lib/./node_modules/tslib/tslib.es6.mjs","webpack://lib/webpack/bootstrap","webpack://lib/webpack/runtime/compat get default export","webpack://lib/webpack/runtime/define property getters","webpack://lib/webpack/runtime/hasOwnProperty shorthand","webpack://lib/webpack/runtime/make namespace object","webpack://lib/./src/index.js"],"sourcesContent":["import Decimal from 'break_infinity.js';\nimport { __extends } from 'tslib';\n\nvar Settings = {\n  isInfinite: function isInfinite(decimal) {\n    return decimal.gte(Decimal.MAX_VALUE);\n  },\n  exponentCommas: {\n    show: true,\n    min: 100000,\n    max: 1000000000\n  },\n  exponentDefaultPlaces: 3\n};\n\nfunction commaSection(value, index) {\n  if (index === 0) {\n    return value.slice(-3);\n  }\n\n  return value.slice(-3 * (index + 1), -3 * index);\n}\n\nfunction addCommas(value) {\n  return Array.from(Array(Math.ceil(value.length / 3))).map(function (_, i) {\n    return commaSection(value, i);\n  }).reverse().join(\",\");\n}\n\nfunction formatWithCommas(value) {\n  var decimalPointSplit = value.toString().split(\".\");\n  decimalPointSplit[0] = decimalPointSplit[0].replace(/\\w+$/g, addCommas);\n  return decimalPointSplit.join(\".\");\n}\nfunction toEngineering(value) {\n  var exponentOffset = value.exponent % 3;\n  return Decimal.fromMantissaExponent_noNormalize(value.mantissa * Math.pow(10, exponentOffset), value.exponent - exponentOffset);\n}\nvar STANDARD_ABBREVIATIONS = [\"K\", \"M\", \"B\", \"T\", \"Qa\", \"Qt\", \"Sx\", \"Sp\", \"Oc\", \"No\"];\nvar STANDARD_PREFIXES = [[\"\", \"U\", \"D\", \"T\", \"Qa\", \"Qt\", \"Sx\", \"Sp\", \"O\", \"N\"], [\"\", \"Dc\", \"Vg\", \"Tg\", \"Qd\", \"Qi\", \"Se\", \"St\", \"Og\", \"Nn\"], [\"\", \"Ce\", \"Dn\", \"Tc\", \"Qe\", \"Qu\", \"Sc\", \"Si\", \"Oe\", \"Ne\"]];\nvar STANDARD_PREFIXES_2 = [\"\", \"MI-\", \"MC-\", \"NA-\", \"PC-\", \"FM-\", \"AT-\", \"ZP-\"];\nfunction abbreviateStandard(rawExp) {\n  var exp = rawExp - 1;\n\n  if (exp === -1) {\n    return \"\";\n  }\n\n  if (exp < STANDARD_ABBREVIATIONS.length) {\n    return STANDARD_ABBREVIATIONS[exp];\n  }\n\n  var prefix = [];\n  var e = exp;\n\n  while (e > 0) {\n    prefix.push(STANDARD_PREFIXES[prefix.length % 3][e % 10]);\n    e = Math.floor(e / 10);\n  }\n\n  while (prefix.length % 3 !== 0) {\n    prefix.push(\"\");\n  }\n\n  var abbreviation = \"\";\n\n  for (var i = prefix.length / 3 - 1; i >= 0; i--) {\n    abbreviation += prefix.slice(i * 3, i * 3 + 3).join(\"\") + STANDARD_PREFIXES_2[i];\n  }\n\n  return abbreviation.replace(/-[A-Z]{2}-/g, \"-\").replace(/U([A-Z]{2}-)/g, \"$1\").replace(/-$/, \"\");\n}\nfunction noSpecialFormatting(exponent) {\n  return exponent < Settings.exponentCommas.min;\n}\nfunction showCommas(exponent) {\n  return Settings.exponentCommas.show && exponent < Settings.exponentCommas.max;\n}\nfunction isExponentFullyShown(exponent) {\n  return noSpecialFormatting(exponent) || showCommas(exponent);\n}\nfunction formatMantissaWithExponent(mantissaFormatting, exponentFormatting, base, steps, useLogIfExponentIsFormatted, separator, forcePositiveExponent) {\n  if (separator === void 0) {\n    separator = \"e\";\n  }\n\n  if (forcePositiveExponent === void 0) {\n    forcePositiveExponent = false;\n  }\n\n  return function (n, precision, precisionExponent) {\n    var realBase = Math.pow(base, steps);\n    var exponent = Math.floor(n.log(realBase)) * steps;\n\n    if (forcePositiveExponent) {\n      exponent = Math.max(exponent, 0);\n    }\n\n    var mantissa = n.div(Decimal.pow(base, exponent)).toNumber();\n\n    if (!(1 <= mantissa && mantissa < realBase)) {\n      var adjust = Math.floor(Math.log(mantissa) / Math.log(realBase));\n      mantissa /= Math.pow(realBase, adjust);\n      exponent += steps * adjust;\n    }\n\n    var m = mantissaFormatting(mantissa, precision);\n\n    if (m === mantissaFormatting(realBase, precision)) {\n      m = mantissaFormatting(1, precision);\n      exponent += steps;\n    }\n\n    if (exponent === 0) {\n      return m;\n    }\n\n    var e = exponentFormatting(exponent, precisionExponent);\n\n    if (useLogIfExponentIsFormatted && !isExponentFullyShown(exponent)) {\n      m = \"\";\n    }\n\n    return \"\".concat(m).concat(separator).concat(e);\n  };\n}\nfunction formatMantissaBaseTen(n, precision) {\n  return n.toFixed(Math.max(0, precision));\n}\nfunction formatMantissa(base, digits) {\n  return function (n, precision) {\n    var value = Math.round(n * Math.pow(base, Math.max(0, precision)));\n    var d = [];\n\n    while (value > 0 || d.length === 0) {\n      d.push(digits[value % base]);\n      value = Math.floor(value / base);\n    }\n\n    var result = d.reverse().join(\"\");\n\n    if (precision > 0) {\n      result = result.padStart(precision + 1, \"0\");\n      result = \"\".concat(result.slice(0, -precision), \".\").concat(result.slice(-precision));\n    }\n\n    return result;\n  };\n}\n\nvar Notation = function () {\n  function Notation() {}\n\n  Notation.prototype.format = function (value, places, placesUnder1000, placesExponent) {\n    if (places === void 0) {\n      places = 0;\n    }\n\n    if (placesUnder1000 === void 0) {\n      placesUnder1000 = 0;\n    }\n\n    if (placesExponent === void 0) {\n      placesExponent = places;\n    }\n\n    if (typeof value === \"number\" && !Number.isFinite(value)) {\n      return this.infinite;\n    }\n\n    var decimal = Decimal.fromValue_noAlloc(value);\n\n    if (decimal.exponent < -300) {\n      return decimal.sign() < 0 ? this.formatVerySmallNegativeDecimal(decimal.abs(), placesUnder1000) : this.formatVerySmallDecimal(decimal, placesUnder1000);\n    }\n\n    if (decimal.exponent < 3) {\n      var number = decimal.toNumber();\n      return number < 0 ? this.formatNegativeUnder1000(Math.abs(number), placesUnder1000) : this.formatUnder1000(number, placesUnder1000);\n    }\n\n    if (Settings.isInfinite(decimal.abs())) {\n      return decimal.sign() < 0 ? this.negativeInfinite : this.infinite;\n    }\n\n    return decimal.sign() < 0 ? this.formatNegativeDecimal(decimal.abs(), places, placesExponent) : this.formatDecimal(decimal, places, placesExponent);\n  };\n\n  Object.defineProperty(Notation.prototype, \"negativeInfinite\", {\n    get: function get() {\n      return \"-\".concat(this.infinite);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Notation.prototype, \"infinite\", {\n    get: function get() {\n      return \"Infinite\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Notation.prototype.formatVerySmallNegativeDecimal = function (value, places) {\n    return \"-\".concat(this.formatVerySmallDecimal(value, places));\n  };\n\n  Notation.prototype.formatVerySmallDecimal = function (value, places) {\n    return this.formatUnder1000(value.toNumber(), places);\n  };\n\n  Notation.prototype.formatNegativeUnder1000 = function (value, places) {\n    return \"-\".concat(this.formatUnder1000(value, places));\n  };\n\n  Notation.prototype.formatUnder1000 = function (value, places) {\n    return value.toFixed(places);\n  };\n\n  Notation.prototype.formatNegativeDecimal = function (value, places, placesExponent) {\n    return \"-\".concat(this.formatDecimal(value, places, placesExponent));\n  };\n\n  Notation.prototype.formatExponent = function (exponent, precision, specialFormat, largeExponentPrecision) {\n    if (precision === void 0) {\n      precision = Settings.exponentDefaultPlaces;\n    }\n\n    if (specialFormat === void 0) {\n      specialFormat = function specialFormat(n, _) {\n        return n.toString();\n      };\n    }\n\n    if (largeExponentPrecision === void 0) {\n      largeExponentPrecision = Math.max(2, precision);\n    }\n\n    if (noSpecialFormatting(exponent)) {\n      return specialFormat(exponent, Math.max(precision, 1));\n    }\n\n    if (showCommas(exponent)) {\n      return formatWithCommas(specialFormat(exponent, 0));\n    }\n\n    return this.formatDecimal(new Decimal(exponent), largeExponentPrecision, largeExponentPrecision);\n  };\n\n  return Notation;\n}();\n\nvar ScientificNotation = function (_super) {\n  __extends(ScientificNotation, _super);\n\n  function ScientificNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ScientificNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Scientific\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ScientificNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    return formatMantissaWithExponent(formatMantissaBaseTen, this.formatExponent.bind(this), 10, 1, false)(value, places, placesExponent);\n  };\n\n  return ScientificNotation;\n}(Notation);\n\nvar EngineeringNotation = function (_super) {\n  __extends(EngineeringNotation, _super);\n\n  function EngineeringNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(EngineeringNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Engineering\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  EngineeringNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    return formatMantissaWithExponent(formatMantissaBaseTen, this.formatExponent.bind(this), 10, 3, false)(value, places, placesExponent);\n  };\n\n  return EngineeringNotation;\n}(Notation);\n\nvar CustomNotation = function (_super) {\n  __extends(CustomNotation, _super);\n\n  function CustomNotation(letters, mantissaExponentSeparator, separator) {\n    if (mantissaExponentSeparator === void 0) {\n      mantissaExponentSeparator = \"\";\n    }\n\n    if (separator === void 0) {\n      separator = \"\";\n    }\n\n    var _this = this;\n\n    if (letters.length < 2) {\n      throw new Error(\"The supplied letter sequence must contain at least 2 letters\");\n    }\n\n    _this = _super.call(this) || this;\n    _this.letters = letters;\n    _this.mantissaExponentSeparator = mantissaExponentSeparator;\n    _this.separator = separator;\n    return _this;\n  }\n\n  Object.defineProperty(CustomNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Custom\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CustomNotation.prototype.formatDecimal = function (value, places) {\n    var engineering = toEngineering(value);\n    var mantissa = engineering.mantissa.toFixed(places);\n    return mantissa + this.mantissaExponentSeparator + this.transcribe(engineering.exponent).join(this.separator);\n  };\n\n  CustomNotation.prototype.transcribe = function (exponent) {\n    var normalizedExponent = exponent / 3;\n    var base = this.letters.length;\n\n    if (normalizedExponent <= base) {\n      return [this.letters[normalizedExponent - 1]];\n    }\n\n    var letters = [];\n\n    while (normalizedExponent > base) {\n      var remainder = normalizedExponent % base;\n      var letterIndex = (remainder === 0 ? base : remainder) - 1;\n      letters.push(this.letters[letterIndex]);\n      normalizedExponent = (normalizedExponent - remainder) / base;\n\n      if (remainder === 0) {\n        normalizedExponent--;\n      }\n    }\n\n    letters.push(this.letters[normalizedExponent - 1]);\n    return letters.reverse();\n  };\n\n  return CustomNotation;\n}(EngineeringNotation);\n\nvar LETTERS = \"abcdefghijklmnopqrstuvwxyz\";\n\nvar LettersNotation = function (_super) {\n  __extends(LettersNotation, _super);\n\n  function LettersNotation() {\n    return _super.call(this, LETTERS) || this;\n  }\n\n  Object.defineProperty(LettersNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Letters\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return LettersNotation;\n}(CustomNotation);\n\nvar EMOJI = [\"😠\", \"🎂\", \"🎄\", \"💀\", \"🍆\", \"👪\", \"🌈\", \"💯\", \"🍦\", \"🎃\", \"💋\", \"😂\", \"🌙\", \"⛔\", \"🐙\", \"💩\", \"❓\", \"☢\", \"🙈\", \"👍\", \"☂\", \"✌\", \"⚠\", \"❌\", \"😋\", \"⚡\"];\n\nvar EmojiNotation = function (_super) {\n  __extends(EmojiNotation, _super);\n\n  function EmojiNotation() {\n    return _super.call(this, EMOJI) || this;\n  }\n\n  Object.defineProperty(EmojiNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Emoji\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return EmojiNotation;\n}(CustomNotation);\n\nvar StandardNotation = function (_super) {\n  __extends(StandardNotation, _super);\n\n  function StandardNotation() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.name = \"Standard\";\n    return _this;\n  }\n\n  StandardNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    return formatMantissaWithExponent(formatMantissaBaseTen, abbreviateStandard, 1000, 1, false, \" \", true)(value, places, placesExponent);\n  };\n\n  return StandardNotation;\n}(Notation);\n\nvar standard$1 = new StandardNotation();\n\nvar MixedScientificNotation = function (_super) {\n  __extends(MixedScientificNotation, _super);\n\n  function MixedScientificNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MixedScientificNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Mixed scientific\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MixedScientificNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    if (value.exponent < 33) {\n      return standard$1.formatDecimal(value, places, placesExponent);\n    }\n\n    return formatMantissaWithExponent(formatMantissaBaseTen, this.formatExponent.bind(this), 10, 1, false)(value, places, placesExponent);\n  };\n\n  return MixedScientificNotation;\n}(Notation);\n\nvar standard = new StandardNotation();\n\nvar MixedEngineeringNotation = function (_super) {\n  __extends(MixedEngineeringNotation, _super);\n\n  function MixedEngineeringNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MixedEngineeringNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Mixed engineering\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MixedEngineeringNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    if (value.exponent < 33) {\n      return standard.formatDecimal(value, places, placesExponent);\n    }\n\n    return formatMantissaWithExponent(formatMantissaBaseTen, this.formatExponent.bind(this), 10, 3, false)(value, places, placesExponent);\n  };\n\n  return MixedEngineeringNotation;\n}(Notation);\n\nvar LogarithmNotation = function (_super) {\n  __extends(LogarithmNotation, _super);\n\n  function LogarithmNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(LogarithmNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Logarithm\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  LogarithmNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    var log10 = value.log10();\n    return \"e\".concat(this.formatExponent(log10, places, function (n, p) {\n      return n.toFixed(p);\n    }, placesExponent));\n  };\n\n  return LogarithmNotation;\n}(Notation);\n\nvar scientific = new ScientificNotation();\n\nvar MixedLogarithmSciNotation = function (_super) {\n  __extends(MixedLogarithmSciNotation, _super);\n\n  function MixedLogarithmSciNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(MixedLogarithmSciNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Mixed Logarithm (Sci)\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MixedLogarithmSciNotation.prototype.formatDecimal = function (value, places, placesExponent) {\n    if (value.exponent < 33) {\n      return scientific.formatDecimal(value, places, placesExponent);\n    }\n\n    var log10 = value.log10();\n    return \"e\".concat(this.formatExponent(log10, places, function (n, p) {\n      return n.toFixed(p);\n    }, placesExponent));\n  };\n\n  return MixedLogarithmSciNotation;\n}(Notation);\n\nvar BracketsNotation = function (_super) {\n  __extends(BracketsNotation, _super);\n\n  function BracketsNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BracketsNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Brackets\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BracketsNotation.prototype.formatDecimal = function (value) {\n    var table = [\")\", \"[\", \"{\", \"]\", \"(\", \"}\"];\n    var log6 = Math.LN10 / Math.log(6) * value.log10();\n    var wholePartOfLog = Math.floor(log6);\n    var decimalPartOfLog = log6 - wholePartOfLog;\n    var decimalPartTimes36 = Math.floor(decimalPartOfLog * 36);\n    var string = \"\";\n\n    while (wholePartOfLog >= 6) {\n      var remainder = wholePartOfLog % 6;\n      wholePartOfLog -= remainder;\n      wholePartOfLog /= 6;\n      string = table[remainder] + string;\n    }\n\n    string = \"e\".concat(table[wholePartOfLog]).concat(string, \".\");\n    string += table[Math.floor(decimalPartTimes36 / 6)];\n    string += table[decimalPartTimes36 % 6];\n    return string;\n  };\n\n  return BracketsNotation;\n}(Notation);\n\nvar LOG10_MAX_VALUE = Math.log10(Number.MAX_VALUE);\n\nvar InfinityNotation = function (_super) {\n  __extends(InfinityNotation, _super);\n\n  function InfinityNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(InfinityNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Infinity\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  InfinityNotation.prototype.formatDecimal = function (value, places) {\n    var log10 = value.log10();\n    var infinities = log10 / LOG10_MAX_VALUE;\n    var infPlaces = infinities < 1000 ? 4 : 3;\n    var formatted = infinities.toFixed(Math.max(infPlaces, places));\n\n    if (Settings.exponentCommas.show) {\n      return \"\".concat(formatWithCommas(formatted), \"\\u221E\");\n    }\n\n    return \"\".concat(formatted, \"\\u221E\");\n  };\n\n  return InfinityNotation;\n}(Notation);\n\nvar ROMAN_NUMBERS = [[1000000, \"M̄\"], [900000, \"C̄M̄\"], [500000, \"D̄\"], [400000, \"C̄D̄\"], [100000, \"C̄\"], [90000, \"X̄C̄\"], [50000, \"L̄\"], [40000, \"X̄L̄\"], [10000, \"X̄\"], [9000, \"ⅯX̄\"], [5000, \"V̄\"], [4000, \"ⅯV̄\"], [1000, \"Ⅿ\"], [900, \"ⅭⅯ\"], [500, \"Ⅾ\"], [400, \"ⅭⅮ\"], [100, \"Ⅽ\"], [90, \"ⅩⅭ\"], [50, \"Ⅼ\"], [40, \"ⅩⅬ\"], [10, \"Ⅹ\"], [9, \"ⅠⅩ\"], [5, \"Ⅴ\"], [4, \"ⅠⅤ\"], [1, \"Ⅰ\"]];\nvar ROMAN_FRACTIONS = [\"\", \"·\", \":\", \"∴\", \"∷\", \"⁙\"];\nvar MAXIMUM = 4000000;\nvar MAX_LOG_10 = Math.log10(MAXIMUM);\n\nvar RomanNotation = function (_super) {\n  __extends(RomanNotation, _super);\n\n  function RomanNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(RomanNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Roman\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(RomanNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"Infinitus\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  RomanNotation.prototype.formatUnder1000 = function (value) {\n    return this.romanize(value);\n  };\n\n  RomanNotation.prototype.formatDecimal = function (value) {\n    if (value.lt(MAXIMUM)) {\n      return this.romanize(value.toNumber());\n    }\n\n    var log10 = value.log10();\n    var maximums = log10 / MAX_LOG_10;\n    var current = Math.pow(MAXIMUM, maximums - Math.floor(maximums));\n    return \"\".concat(this.romanize(current), \"\\u2191\").concat(this.formatDecimal(new Decimal(maximums)));\n  };\n\n  RomanNotation.prototype.romanize = function (value) {\n    var romanized = \"\";\n\n    for (var _i = 0, ROMAN_NUMBERS_1 = ROMAN_NUMBERS; _i < ROMAN_NUMBERS_1.length; _i++) {\n      var numberPair = ROMAN_NUMBERS_1[_i];\n      var decimal = numberPair[0];\n      var roman = numberPair[1];\n\n      while (decimal <= value) {\n        romanized += roman;\n        value -= decimal;\n      }\n    }\n\n    var duodecimal = Math.round(Math.floor(value * 10) * 1.2);\n\n    if (duodecimal === 0) {\n      return romanized === \"\" ? \"nulla\" : romanized;\n    }\n\n    if (duodecimal > 5) {\n      duodecimal -= 6;\n      romanized += \"Ｓ\";\n    }\n\n    romanized += ROMAN_FRACTIONS[duodecimal];\n    return romanized;\n  };\n\n  return RomanNotation;\n}(Notation);\n\nvar DOT_DIGITS = \"⠀⠁⠂⠃⠄⠅⠆⠇⠈⠉⠊⠋⠌⠍⠎⠏⠐⠑⠒⠓⠔⠕⠖⠗⠘⠙⠚⠛⠜⠝⠞⠟⠠⠡⠢⠣⠤⠥⠦⠧⠨⠩⠪⠫⠬⠭⠮⠯⠰⠱⠲⠳⠴⠵⠶⠷⠸⠹⠺⠻⠼⠽⠾⠿\" + \"⡀⡁⡂⡃⡄⡅⡆⡇⡈⡉⡊⡋⡌⡍⡎⡏⡐⡑⡒⡓⡔⡕⡖⡗⡘⡙⡚⡛⡜⡝⡞⡟⡠⡡⡢⡣⡤⡥⡦⡧⡨⡩⡪⡫⡬⡭⡮⡯⡰⡱⡲⡳⡴⡵⡶⡷⡸⡹⡺⡻⡼⡽⡾⡿\" + \"⢀⢁⢂⢃⢄⢅⢆⢇⢈⢉⢊⢋⢌⢍⢎⢏⢐⢑⢒⢓⢔⢕⢖⢗⢘⢙⢚⢛⢜⢝⢞⢟⢠⢡⢢⢣⢤⢥⢦⢧⢨⢩⢪⢫⢬⢭⢮⢯⢰⢱⢲⢳⢴⢵⢶⢷⢸⢹⢺⢻⢼⢽⢾⢿\" + \"⣀⣁⣂⣃⣄⣅⣆⣇⣈⣉⣊⣋⣌⣍⣎⣏⣐⣑⣒⣓⣔⣕⣖⣗⣘⣙⣚⣛⣜⣝⣞⣟⣠⣡⣢⣣⣤⣥⣦⣧⣨⣩⣪⣫⣬⣭⣮⣯⣰⣱⣲⣳⣴⣵⣶⣷⣸⣹⣺⣻⣼⣽⣾⣿\";\n\nvar DotsNotation = function (_super) {\n  __extends(DotsNotation, _super);\n\n  function DotsNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(DotsNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Dots\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DotsNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"⣿⠀⣿\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  DotsNotation.prototype.formatUnder1000 = function (value) {\n    return this.dotify(value * 254);\n  };\n\n  DotsNotation.prototype.formatDecimal = function (value) {\n    if (value.lt(16387063.9980315)) {\n      return this.dotify(value.toNumber() * 254);\n    }\n\n    var log = value.log(254);\n    var exponent = Math.floor(log - 2);\n    var mantissa = Math.pow(254, log - exponent);\n    return \"\".concat(this.dotify(exponent), \"\\u28FF\").concat(this.dotify(mantissa * 254));\n  };\n\n  DotsNotation.prototype.dotify = function (rawValue, pad) {\n    if (pad === void 0) {\n      pad = false;\n    }\n\n    var value = Math.round(rawValue);\n\n    if (!pad && value < 254) {\n      return DOT_DIGITS[value + 1];\n    }\n\n    if (value < 64516) {\n      return DOT_DIGITS[Math.floor(value / 254) + 1] + DOT_DIGITS[value % 254 + 1];\n    }\n\n    return this.dotify(Math.floor(value / 64516)) + this.dotify(value % 64516, true);\n  };\n\n  return DotsNotation;\n}(Notation);\n\nvar ZALGO_CHARS = [\"\\u030D\", \"\\u0336\", \"\\u0353\", \"\\u033F\", \"\\u0489\", \"\\u0330\", \"\\u031A\", \"\\u0338\", \"\\u035A\", \"\\u0337\"];\nvar HE_COMES = [\"H\", \"E\", \" \", \"C\", \"O\", \"M\", \"E\", \"S\"];\n\nfunction randomElement(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}\n\nvar ZalgoNotation = function (_super) {\n  __extends(ZalgoNotation, _super);\n\n  function ZalgoNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ZalgoNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Zalgo\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ZalgoNotation.prototype, \"infinite\", {\n    get: function get() {\n      return HE_COMES.map(function (_char) {\n        return _char + randomElement(ZALGO_CHARS);\n      }).join(\"\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ZalgoNotation.prototype.formatUnder1000 = function (value) {\n    return this.heComes(new Decimal(value));\n  };\n\n  ZalgoNotation.prototype.formatDecimal = function (value) {\n    return this.heComes(value);\n  };\n\n  ZalgoNotation.prototype.heComes = function (value) {\n    var scaled = value.plus(1).log10() / 66666 * 1000;\n    var displayPart = Number(scaled.toFixed(2));\n    var zalgoPart = Math.floor(Math.abs(Math.pow(2, 30) * (scaled - displayPart)));\n    var displayChars = Array.from(formatWithCommas(displayPart));\n    var zalgoIndices = Array.from(zalgoPart.toString() + scaled.toFixed(0));\n\n    for (var i = 0; i < zalgoIndices.length; i++) {\n      var zalgoIndex = parseInt(zalgoIndices[i], 10);\n      var displayIndex = 37 * i % displayChars.length;\n      displayChars[displayIndex] += ZALGO_CHARS[zalgoIndex];\n    }\n\n    return displayChars.join(\"\");\n  };\n\n  return ZalgoNotation;\n}(Notation);\n\nvar SIGNS = {\n  positive: 0,\n  negative: 1\n};\n\nvar HexNotation = function (_super) {\n  __extends(HexNotation, _super);\n\n  function HexNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(HexNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Hex\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HexNotation.prototype, \"negativeInfinite\", {\n    get: function get() {\n      return \"00000000\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(HexNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"FFFFFFFF\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  HexNotation.prototype.formatVerySmallNegativeDecimal = function (value) {\n    return this.formatDecimal(value.negate());\n  };\n\n  HexNotation.prototype.formatVerySmallDecimal = function (value) {\n    return this.formatDecimal(value);\n  };\n\n  HexNotation.prototype.formatNegativeUnder1000 = function (value) {\n    return this.formatDecimal(new Decimal(-value));\n  };\n\n  HexNotation.prototype.formatUnder1000 = function (value) {\n    return this.formatDecimal(new Decimal(value));\n  };\n\n  HexNotation.prototype.formatNegativeDecimal = function (value) {\n    return this.formatDecimal(value.negate());\n  };\n\n  HexNotation.prototype.formatDecimal = function (value) {\n    return this.rawValue(value, 32).toString(16).toUpperCase().padStart(8, \"0\");\n  };\n\n  HexNotation.prototype.modifiedLogarithm = function (x) {\n    var floorOfLog = Math.floor(Decimal.log2(x));\n    var previousPowerOfTwo = Decimal.pow(2, floorOfLog);\n    var fractionToNextPowerOfTwo = Decimal.div(x, previousPowerOfTwo).toNumber() - 1;\n    return floorOfLog + fractionToNextPowerOfTwo;\n  };\n\n  HexNotation.prototype.isFinite = function (x) {\n    if (typeof x === \"number\") {\n      return isFinite(x);\n    }\n\n    return isFinite(x.e) && isFinite(x.mantissa);\n  };\n\n  HexNotation.prototype.rawValue = function (inputValue, numberOfBits) {\n    var value = inputValue;\n    var signs = [];\n\n    for (var i = 0; i < numberOfBits; i++) {\n      if (!this.isFinite(value)) {\n        break;\n      }\n\n      if (Decimal.lt(value, 0)) {\n        signs.push(SIGNS.negative);\n        value = -this.modifiedLogarithm(Decimal.times(value, -1));\n      } else {\n        signs.push(SIGNS.positive);\n        value = this.modifiedLogarithm(value);\n      }\n    }\n\n    var resultValue = parseInt(signs.map(function (x) {\n      return x === SIGNS.positive ? 1 : 0;\n    }).join(\"\").padEnd(numberOfBits, \"0\"), 2);\n\n    if (resultValue !== Math.pow(2, numberOfBits) - 1 && (value > 0 || value === 0 && resultValue % 2 === 1)) {\n      resultValue += 1;\n    }\n\n    return resultValue;\n  };\n\n  return HexNotation;\n}(Notation);\n\nvar VOLUME_UNITS = [[0, \"pL\", 0], [61611520, \"minim\", 0], [61611520 * 60, \"dram\", 1], [61611520 * 60 * 8, \"ounce\", 2], [61611520 * 60 * 8 * 4, \"gill\", 2], [61611520 * 60 * 8 * 4 * 2, \"cup\", 3], [61611520 * 60 * 8 * 4 * 2 * 2, \"pint\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2, \"quart\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4, \"gallon\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 4.5, \"pin\", 3], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 9, \"firkin\", 3], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 18, \"kilderkin\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 36, \"barrel\", 4], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 54, \"hogshead\", 5], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 72, \"puncheon\", 6], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 108, \"butt\", 7], [61611520 * 60 * 8 * 4 * 2 * 2 * 2 * 4 * 216, \"tun\", 7]];\nvar MINIMS = VOLUME_UNITS[1];\nvar VOLUME_ADJECTIVES = [\"minute \", \"tiny \", \"petite \", \"small \", \"modest \", \"medium \", \"generous \", \"large \", \"great \", \"grand \", \"huge \", \"gigantic \", \"immense \", \"colossal \", \"vast \", \"galactic \", \"cosmic \", \"infinite \", \"eternal \"];\nvar VOWELS = new Set(\"aeiouAEIOU\");\nvar MAX_VOLUME = 10 * VOLUME_UNITS[VOLUME_UNITS.length - 1][0];\nvar LOG_MAX_VOLUME = Math.log10(MAX_VOLUME);\nvar REDUCE_RATIO = Math.log10(MAX_VOLUME / MINIMS[0]);\n\nvar ImperialNotation = function (_super) {\n  __extends(ImperialNotation, _super);\n\n  function ImperialNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ImperialNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Imperial\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ImperialNotation.prototype.formatUnder1000 = function (value) {\n    return this.formatDecimal(new Decimal(value));\n  };\n\n  ImperialNotation.prototype.formatDecimal = function (value) {\n    if (value.lt(MAX_VOLUME)) {\n      return this.convertToVolume(value.toNumber(), VOLUME_ADJECTIVES[0]);\n    }\n\n    var logValue = value.log10() - LOG_MAX_VOLUME;\n    var adjectiveIndex = 1;\n\n    while (logValue > REDUCE_RATIO) {\n      adjectiveIndex++;\n      logValue /= REDUCE_RATIO;\n    }\n\n    return this.convertToVolume(Math.pow(10, logValue) * MINIMS[0], VOLUME_ADJECTIVES[adjectiveIndex]);\n  };\n\n  ImperialNotation.prototype.convertToVolume = function (x, adjective) {\n    var volIdx = this.findVolumeUnit(x);\n\n    if (volIdx === 0) {\n      return this.formatMetric(x);\n    }\n\n    var smallStr = this.checkSmallUnits(adjective, x, volIdx);\n\n    if (smallStr !== undefined) {\n      return smallStr;\n    }\n\n    var big = VOLUME_UNITS[volIdx];\n    var numBig = Math.floor(x / big[0]);\n    var remainder = x - numBig * big[0];\n\n    if (volIdx < VOLUME_UNITS.length - 1) {\n      var volume = this.checkAlmost(adjective, x, 0, volIdx + 1);\n\n      if (volume !== undefined) {\n        return volume;\n      }\n    }\n\n    var nearMultiple = this.checkAlmost(adjective, remainder, numBig, volIdx);\n\n    if (nearMultiple !== undefined) {\n      return nearMultiple;\n    }\n\n    if (remainder < VOLUME_UNITS[volIdx - big[2]][0]) {\n      return this.pluralOrArticle(numBig, adjective + big[1]);\n    }\n\n    var numBest = Math.floor(remainder / VOLUME_UNITS[volIdx - 1][0]);\n    var bestUnitIndex = volIdx - 1;\n    var bestUnitError = remainder - numBest * VOLUME_UNITS[volIdx - 1][0];\n\n    for (var thirdUnitIndex = volIdx - 2; thirdUnitIndex > 0 && thirdUnitIndex > volIdx - big[2]; --thirdUnitIndex) {\n      var third = VOLUME_UNITS[thirdUnitIndex];\n      var numThird = Math.floor(remainder / third[0]);\n\n      if (numThird > 9 && thirdUnitIndex !== 1) {\n        break;\n      }\n\n      var thirdUnitError = remainder - numThird * third[0];\n\n      if (thirdUnitError < 0.99 * bestUnitError) {\n        numBest = numThird;\n        bestUnitIndex = thirdUnitIndex;\n        bestUnitError = thirdUnitError;\n      }\n    }\n\n    return this.bigAndSmall(adjective, numBig, big, numBest, VOLUME_UNITS[bestUnitIndex]);\n  };\n\n  ImperialNotation.prototype.formatMetric = function (x) {\n    if (x < 1000) {\n      return \"\".concat(x < 10 || x === Math.round(x) ? x.toFixed(2) : x.toFixed(0), \"pL\");\n    }\n\n    if (x < 1e6) {\n      return \"\".concat((x / 1000).toPrecision(4), \"nL\");\n    }\n\n    return \"\".concat((x / 1e6).toPrecision(4), \"\\u03BCL\");\n  };\n\n  ImperialNotation.prototype.checkSmallUnits = function (adjective, x, volIdx) {\n    var big = VOLUME_UNITS[volIdx];\n\n    if (volIdx <= 3 && x + 9.5 * MINIMS[0] > VOLUME_UNITS[volIdx + 1][0]) {\n      return this.almostOrShortOf(x, adjective, 1, VOLUME_UNITS[volIdx + 1], MINIMS);\n    }\n\n    if (volIdx === 1) {\n      var deciMinims = Math.round(x * 10 / big[0]);\n\n      if (deciMinims === 10) {\n        return this.addArticle(adjective + big[1]);\n      }\n\n      var places = deciMinims < 100 ? 1 : 0;\n      return \"\".concat((deciMinims / 10).toFixed(places), \" \").concat(adjective).concat(big[1], \"s\");\n    }\n\n    if (volIdx === 2) {\n      var numBig = Math.floor(x / big[0]);\n      var remainder = x - numBig * big[0];\n\n      if (remainder > 50.5 * MINIMS[0]) {\n        return this.almostOrShortOf(x, adjective, numBig + 1, big, MINIMS);\n      }\n\n      var numSmall = Math.round(remainder / MINIMS[0]);\n      return this.bigAndSmall(adjective, numBig, big, numSmall, MINIMS);\n    }\n\n    return undefined;\n  };\n\n  ImperialNotation.prototype.findVolumeUnit = function (x) {\n    var low = 0;\n    var high = VOLUME_UNITS.length;\n    var guess = 0;\n\n    while (high - low > 1) {\n      guess = Math.floor((low + high) / 2);\n\n      if (VOLUME_UNITS[guess][0] > x) {\n        high = guess;\n      } else {\n        low = guess;\n      }\n    }\n\n    return low;\n  };\n\n  ImperialNotation.prototype.checkAlmost = function (adjective, x, numBig, bigIndex) {\n    var big = VOLUME_UNITS[bigIndex];\n\n    if (x + VOLUME_UNITS[bigIndex - big[2]][0] >= big[0]) {\n      return this.almost(adjective, numBig + 1, big);\n    }\n\n    var small = VOLUME_UNITS[bigIndex + 1 - big[2]];\n\n    if (x + small[0] >= big[0]) {\n      return this.shortOf(adjective, numBig + 1, big, 1, small);\n    }\n\n    return undefined;\n  };\n\n  ImperialNotation.prototype.bigAndSmall = function (adjective, numBig, big, numSmall, small) {\n    var bigStr = this.pluralOrArticle(numBig, adjective + big[1]);\n    return numSmall === 0 ? bigStr : \"\".concat(bigStr, \" and \").concat(this.pluralOrArticle(numSmall, small[1]));\n  };\n\n  ImperialNotation.prototype.almost = function (adjective, numBig, big) {\n    return \"almost \".concat(this.pluralOrArticle(numBig, adjective + big[1]));\n  };\n\n  ImperialNotation.prototype.almostOrShortOf = function (x, adjective, numBig, big, small) {\n    var _short = Math.round((numBig * big[0] - x) / small[0]);\n\n    return _short === 0 ? this.almost(adjective, numBig, big) : this.shortOf(adjective, numBig, big, _short, small);\n  };\n\n  ImperialNotation.prototype.shortOf = function (adjective, numBig, big, numSmall, small) {\n    return \"\".concat(this.pluralOrArticle(numSmall, small[1]), \" short of \").concat(this.pluralOrArticle(numBig, adjective + big[1]));\n  };\n\n  ImperialNotation.prototype.pluralOrArticle = function (num, str) {\n    return num === 1 ? this.addArticle(str) : \"\".concat(num, \" \").concat(str, \"s\");\n  };\n\n  ImperialNotation.prototype.addArticle = function (x) {\n    return (VOWELS.has(x[0]) ? \"an \" : \"a \") + x;\n  };\n\n  return ImperialNotation;\n}(Notation);\n\nvar HOURS = [\"🕛\", \"🕐\", \"🕑\", \"🕒\", \"🕓\", \"🕔\", \"🕕\", \"🕖\", \"🕗\", \"🕘\", \"🕙\", \"🕚\"];\nvar LOG12 = Math.log10(12);\n\nvar ClockNotation = function (_super) {\n  __extends(ClockNotation, _super);\n\n  function ClockNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ClockNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Clock\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ClockNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"🕛🕡\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ClockNotation.prototype.formatUnder1000 = function (value) {\n    return this.clockwise(new Decimal(value));\n  };\n\n  ClockNotation.prototype.formatDecimal = function (value) {\n    return this.clockwise(value);\n  };\n\n  ClockNotation.prototype.clockwise = function (value) {\n    if (value.lt(12)) {\n      return this.hour(value.toNumber());\n    }\n\n    var log = value.log10() / LOG12;\n    var exponent = Math.floor(log);\n\n    if (log < 301) {\n      var clockLow = (Math.pow(12, log - exponent + 1) - 12) / 11;\n\n      if (exponent < 13) {\n        return this.hour(exponent - 1) + this.hour(clockLow);\n      }\n\n      exponent -= 13;\n      var prefix = \"\";\n\n      if (exponent >= 144) {\n        prefix = this.hour(0);\n        exponent -= 144;\n      }\n\n      return prefix + this.hour(exponent / 12) + this.hour(exponent % 12) + this.hour(clockLow);\n    }\n\n    exponent -= 301;\n    var clockHigh = 1;\n\n    while (exponent >= 1728) {\n      exponent = (exponent - 1728) / 12;\n      ++clockHigh;\n    }\n\n    return this.hour(clockHigh) + this.hour(exponent / 144) + this.hour(exponent % 144 / 12) + this.hour(exponent % 12);\n  };\n\n  ClockNotation.prototype.hour = function (number) {\n    return HOURS[Math.max(Math.min(Math.floor(number), 11), 0)];\n  };\n\n  return ClockNotation;\n}(Notation);\n\nvar MAX_INT = 10006;\nvar MAX_INT_DECIMAL = new Decimal(MAX_INT);\nvar MAX_INT_LOG_10 = Math.log10(MAX_INT);\nvar PRIMES = [];\nvar visitedMarks = new Array(MAX_INT).fill(false);\nvar sieveLimit = Math.ceil(Math.sqrt(MAX_INT));\n\nfor (var number = 2; number < sieveLimit; number++) {\n  if (visitedMarks[number]) {\n    continue;\n  }\n\n  PRIMES.push(number);\n\n  for (var mark = number; mark <= MAX_INT; mark += number) {\n    visitedMarks[mark] = true;\n  }\n}\n\nfor (var number = sieveLimit; number < MAX_INT; number++) {\n  if (!visitedMarks[number]) {\n    PRIMES.push(number);\n  }\n}\n\nvar LAST_PRIME_INDEX = PRIMES.length - 1;\nvar MAX_PRIME = PRIMES[LAST_PRIME_INDEX];\nvar EXPONENT_CHARACTERS = [\"\\u2070\", \"\\xB9\", \"\\xB2\", \"\\xB3\", \"\\u2074\", \"\\u2075\", \"\\u2076\", \"\\u2077\", \"\\u2078\", \"\\u2079\", \"\\xB9\\u2070\", \"\\xB9\\xB9\", \"\\xB9\\xB2\", \"\\xB9\\xB3\"];\n\nvar PrimeNotation = function (_super) {\n  __extends(PrimeNotation, _super);\n\n  function PrimeNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(PrimeNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Prime\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PrimeNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"Primefinity?\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PrimeNotation.prototype.formatUnder1000 = function (value) {\n    return this.primify(new Decimal(value));\n  };\n\n  PrimeNotation.prototype.formatDecimal = function (value) {\n    return this.primify(value);\n  };\n\n  PrimeNotation.prototype.primify = function (value) {\n    if (value.lte(MAX_INT_DECIMAL)) {\n      var floored = Math.floor(value.toNumber());\n\n      if (floored === 0) {\n        return \"0\";\n      }\n\n      if (floored === 1) {\n        return \"1\";\n      }\n\n      return this.formatFromList(this.primesFromInt(floored));\n    }\n\n    var exp = value.log10() / MAX_INT_LOG_10;\n    var base = Math.pow(MAX_INT, exp / Math.ceil(exp));\n\n    if (exp <= MAX_INT) {\n      return this.formatBaseExp(base, exp);\n    }\n\n    var exp2 = Math.log10(exp) / Math.log10(MAX_INT);\n    var exp2Ceil = Math.ceil(exp2);\n    exp = Math.pow(MAX_INT, exp2 / exp2Ceil);\n    base = Math.pow(MAX_INT, exp / Math.ceil(exp));\n    var exp2List = this.primesFromInt(exp2Ceil);\n    var formatedExp2 = exp2List.length === 1 ? EXPONENT_CHARACTERS[exp2List[0]] : \"^(\".concat(this.formatFromList(exp2List), \")\");\n    return this.formatBaseExp(base, exp) + formatedExp2;\n  };\n\n  PrimeNotation.prototype.formatBaseExp = function (base, exp) {\n    var formatedBase = this.formatFromList(this.primesFromInt(Math.floor(base)));\n    var formatedExp = this.formatFromList(this.primesFromInt(Math.ceil(exp)));\n    return \"(\".concat(formatedBase, \")^(\").concat(formatedExp, \")\");\n  };\n\n  PrimeNotation.prototype.formatFromList = function (list) {\n    var out = [];\n    var last = 0;\n    var count = 0;\n\n    for (var i = 0; i < list.length; i++) {\n      if (list[i] === last) {\n        count++;\n      } else {\n        if (last > 0) {\n          if (count > 1) {\n            out.push(\"\".concat(last).concat(EXPONENT_CHARACTERS[count]));\n          } else {\n            out.push(last);\n          }\n        }\n\n        last = list[i];\n        count = 1;\n      }\n\n      if (i === list.length - 1) {\n        if (count > 1) {\n          out.push(\"\".concat(list[i]).concat(EXPONENT_CHARACTERS[count]));\n        } else {\n          out.push(list[i]);\n        }\n      }\n    }\n\n    return out.join(\"\\xD7\");\n  };\n\n  PrimeNotation.prototype.findGreatestLtePrimeIndex = function (value) {\n    if (value >= MAX_PRIME) {\n      return LAST_PRIME_INDEX;\n    }\n\n    var min = 0;\n    var max = LAST_PRIME_INDEX;\n\n    while (max !== min + 1) {\n      var middle = Math.floor((max + min) / 2);\n      var prime = PRIMES[middle];\n\n      if (prime === value) {\n        return middle;\n      }\n\n      if (value < prime) {\n        max = middle;\n      } else {\n        min = middle;\n      }\n    }\n\n    return min;\n  };\n\n  PrimeNotation.prototype.primesFromInt = function (value) {\n    var factors = [];\n    var factoringValue = value;\n\n    while (factoringValue !== 1) {\n      var ltePrimeIndex = this.findGreatestLtePrimeIndex(factoringValue);\n      var ltePrime = PRIMES[ltePrimeIndex];\n\n      if (ltePrime === factoringValue) {\n        factors.push(factoringValue);\n        break;\n      }\n\n      var halfFactoring = factoringValue / 2;\n      var primeIndex = this.findGreatestLtePrimeIndex(halfFactoring);\n      var factor = void 0;\n\n      while (factor === undefined) {\n        var prime = PRIMES[primeIndex--];\n\n        if (factoringValue % prime === 0) {\n          factor = prime;\n        }\n      }\n\n      factoringValue /= factor;\n      factors.push(factor);\n    }\n\n    return factors.reverse();\n  };\n\n  return PrimeNotation;\n}(Notation);\n\nvar BARS = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nvar NEGATIVE_BARS = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\nvar LOG8 = Math.log(8);\n\nvar BarNotation = function (_super) {\n  __extends(BarNotation, _super);\n\n  function BarNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BarNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Bar\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BarNotation.prototype, \"negativeInfinite\", {\n    get: function get() {\n      return \"\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BarNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BarNotation.prototype.formatVerySmallNegativeDecimal = function (value) {\n    return this.flipBars(this.formatDecimal(value));\n  };\n\n  BarNotation.prototype.formatVerySmallDecimal = function (value) {\n    return this.formatDecimal(value);\n  };\n\n  BarNotation.prototype.formatNegativeUnder1000 = function (value) {\n    return this.flipBars(this.formatDecimal(new Decimal(value)));\n  };\n\n  BarNotation.prototype.formatUnder1000 = function (value) {\n    return this.formatDecimal(new Decimal(value));\n  };\n\n  BarNotation.prototype.formatNegativeDecimal = function (value) {\n    return this.flipBars(this.formatDecimal(value));\n  };\n\n  BarNotation.prototype.formatDecimal = function (value) {\n    if (value.eq(0)) {\n      return \"0\";\n    }\n\n    if (value.lessThan(1) && value.greaterThan(0)) {\n      return \"/\".concat(this.formatDecimal(Decimal.div(1, value)));\n    }\n\n    var log8 = Math.LN10 / LOG8 * value.log10();\n    var wholeLog = Math.floor(log8);\n    var decimalLog = log8 - wholeLog;\n    var decimalLog64 = Math.floor(decimalLog * 64);\n    var parts = [BARS[decimalLog64 % 8], BARS[Math.floor(decimalLog64 / 8)]];\n\n    while (wholeLog >= 8) {\n      var remainder = wholeLog % 8;\n      wholeLog = (wholeLog - remainder) / 8;\n      parts.push(BARS[remainder]);\n    }\n\n    parts.push(BARS[wholeLog]);\n    return parts.join(\"\");\n  };\n\n  BarNotation.prototype.flipBars = function (parts) {\n    var newParts = [];\n\n    for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n      var part = parts_1[_i];\n      newParts.push(NEGATIVE_BARS[BARS.indexOf(part)]);\n    }\n\n    return newParts.join(\"\");\n  };\n\n  return BarNotation;\n}(Notation);\n\nvar SHI = \"世使侍勢十史嗜士始室實屍市恃拭拾施是時氏濕獅矢石視試詩誓識逝適釋食\";\n\nvar ShiNotation = function (_super) {\n  __extends(ShiNotation, _super);\n\n  function ShiNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(ShiNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Shi\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ShiNotation.prototype, \"infinite\", {\n    get: function get() {\n      return this.shi(Decimal.NUMBER_MAX_VALUE);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  ShiNotation.prototype.formatUnder1000 = function (value) {\n    return this.shi(new Decimal(value));\n  };\n\n  ShiNotation.prototype.formatDecimal = function (value) {\n    return this.shi(value);\n  };\n\n  ShiNotation.prototype.getShiCharacter = function (x) {\n    return SHI[Math.floor(x) % SHI.length];\n  };\n\n  ShiNotation.prototype.shi = function (value) {\n    var scaled = Math.pow(value.plus(1).log10() * 1000, 0.08);\n    var shi = \"\";\n\n    for (var i = 0; i < 3; i++) {\n      shi += this.getShiCharacter(scaled * Math.pow(SHI.length, i));\n    }\n\n    return shi;\n  };\n\n  return ShiNotation;\n}(Notation);\n\nvar _a;\nvar LEN = 23;\nvar START = \"\\uE010\";\nvar START_HEX = (_a = START.codePointAt(0)) !== null && _a !== void 0 ? _a : 65;\nvar INFINITY = \"\\uE027\";\nvar NEGATIVE = \"\\uE028\";\nvar BLOBS = [];\n\nfor (var i = 0; i < LEN; i++) {\n  var _char = String.fromCharCode(START_HEX + i);\n\n  BLOBS.push(_char);\n}\n\nvar LOG3 = Math.log10(3);\n\nvar BlobsNotation = function (_super) {\n  __extends(BlobsNotation, _super);\n\n  function BlobsNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BlobsNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Blobs\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BlobsNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \"\".concat(INFINITY);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BlobsNotation.prototype, \"negativeInfinite\", {\n    get: function get() {\n      return \"\".concat(NEGATIVE).concat(INFINITY);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BlobsNotation.prototype.formatNegativeUnder1000 = function (num) {\n    return \"\".concat(NEGATIVE).concat(this.blobify(new Decimal(num - 1)));\n  };\n\n  BlobsNotation.prototype.formatNegativeDecimal = function (num) {\n    return \"\".concat(NEGATIVE).concat(this.blobify(num.minus(1)));\n  };\n\n  BlobsNotation.prototype.formatUnder1000 = function (num) {\n    return this.blobify(new Decimal(num));\n  };\n\n  BlobsNotation.prototype.formatDecimal = function (num) {\n    return this.blobify(num);\n  };\n\n  BlobsNotation.prototype.blobify = function (num) {\n    var number = this.reduceNumber(num.abs());\n\n    if (number < LEN) {\n      return BLOBS[Math.floor(number)];\n    }\n\n    if (Math.floor(number / LEN) < LEN + 1) {\n      return BLOBS[Math.floor(number / LEN) - 1] + BLOBS[Math.floor(number % LEN)];\n    }\n\n    return this.blobify(Decimal.floor(number / LEN - 1)) + BLOBS[Math.floor(number % LEN)];\n  };\n\n  BlobsNotation.prototype.reduceNumber = function (num) {\n    if (num.lte(1000)) {\n      return num.toNumber();\n    }\n\n    return (Math.log10(num.log10()) - LOG3) / Math.log10(1.0002) + 1000;\n  };\n\n  return BlobsNotation;\n}(Notation);\n\nvar BlindNotation = function (_super) {\n  __extends(BlindNotation, _super);\n\n  function BlindNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(BlindNotation.prototype, \"name\", {\n    get: function get() {\n      return \"Blind\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BlindNotation.prototype, \"negativeInfinite\", {\n    get: function get() {\n      return \" \";\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BlindNotation.prototype, \"infinite\", {\n    get: function get() {\n      return \" \";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BlindNotation.prototype.formatVerySmallNegativeDecimal = function () {\n    return \" \";\n  };\n\n  BlindNotation.prototype.formatVerySmallDecimal = function () {\n    return \" \";\n  };\n\n  BlindNotation.prototype.formatNegativeUnder1000 = function () {\n    return \" \";\n  };\n\n  BlindNotation.prototype.formatUnder1000 = function () {\n    return \" \";\n  };\n\n  BlindNotation.prototype.formatNegativeDecimal = function () {\n    return \" \";\n  };\n\n  BlindNotation.prototype.formatDecimal = function () {\n    return \" \";\n  };\n\n  return BlindNotation;\n}(Notation);\n\nvar notationList = [new ScientificNotation(), new LettersNotation(), new StandardNotation(), new LogarithmNotation(), new BracketsNotation(), new InfinityNotation(), new RomanNotation(), new DotsNotation(), new ZalgoNotation(), new HexNotation(), new ImperialNotation(), new ClockNotation(), new PrimeNotation(), new BarNotation(), new ShiNotation(), new BlobsNotation(), new BlindNotation()];\n\nvar AllNotation = function (_super) {\n  __extends(AllNotation, _super);\n\n  function AllNotation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(AllNotation.prototype, \"name\", {\n    get: function get() {\n      return \"ALL\";\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  AllNotation.prototype.formatNegativeUnder1000 = function (value, places) {\n    return this.formatDecimal(new Decimal(-value), places);\n  };\n\n  AllNotation.prototype.formatUnder1000 = function (value, places) {\n    return this.formatDecimal(new Decimal(value), places);\n  };\n\n  AllNotation.prototype.formatNegativeDecimal = function (value, places) {\n    return this.formatDecimal(new Decimal(-value), places);\n  };\n\n  AllNotation.prototype.formatDecimal = function (value, places) {\n    var index = Math.floor(Math.log2(value.abs().plus(2).log2()));\n    var notation = notationList[index % notationList.length];\n    return notation.format(value, places, places);\n  };\n\n  return AllNotation;\n}(Notation);\n\nexport { AllNotation, BarNotation, BlindNotation, BlobsNotation, BracketsNotation, ClockNotation, CustomNotation, DotsNotation, EmojiNotation, EngineeringNotation, HexNotation, ImperialNotation, InfinityNotation, LettersNotation, LogarithmNotation, MixedEngineeringNotation, MixedLogarithmSciNotation, MixedScientificNotation, Notation, PrimeNotation, RomanNotation, ScientificNotation, Settings, ShiNotation, StandardNotation, ZalgoNotation, abbreviateStandard, formatMantissa, formatMantissaBaseTen, formatMantissaWithExponent };\n","import t from\"pad-end\";var n=9e15,e=function(){for(var t=[],n=-323;n<=308;n++)t.push(Number(\"1e\"+n));return function(n){return t[n+323]}}(),r=function(t){return t instanceof a?t:new a(t)},i=function(t,n){return(new a).fromMantissaExponent(t,n)},o=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)};function u(t,n,e,r){var i=n.mul(e.pow(r));return a.floor(t.div(i).mul(e.sub(1)).add(1).log10()/e.log10())}function s(t,n,e,r){return n.mul(e.pow(r)).mul(a.sub(1,e.pow(t))).div(a.sub(1,e))}var a=function(){function a(t){this.mantissa=NaN,this.exponent=NaN,void 0===t?(this.m=0,this.e=0):t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):this.fromString(t)}return Object.defineProperty(a.prototype,\"m\",{get:function(){return this.mantissa},set:function(t){this.mantissa=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"e\",{get:function(){return this.exponent},set:function(t){this.exponent=t},enumerable:!1,configurable:!0}),Object.defineProperty(a.prototype,\"s\",{get:function(){return this.sign()},set:function(t){if(0===t)return this.e=0,void(this.m=0);this.sgn()!==t&&(this.m=-this.m)},enumerable:!1,configurable:!0}),a.fromMantissaExponent=function(t,n){return(new a).fromMantissaExponent(t,n)},a.fromMantissaExponent_noNormalize=function(t,n){return(new a).fromMantissaExponent_noNormalize(t,n)},a.fromDecimal=function(t){return(new a).fromDecimal(t)},a.fromNumber=function(t){return(new a).fromNumber(t)},a.fromString=function(t){return(new a).fromString(t)},a.fromValue=function(t){return(new a).fromValue(t)},a.fromValue_noAlloc=function(t){return t instanceof a?t:new a(t)},a.abs=function(t){return r(t).abs()},a.neg=function(t){return r(t).neg()},a.negate=function(t){return r(t).neg()},a.negated=function(t){return r(t).neg()},a.sign=function(t){return r(t).sign()},a.sgn=function(t){return r(t).sign()},a.round=function(t){return r(t).round()},a.floor=function(t){return r(t).floor()},a.ceil=function(t){return r(t).ceil()},a.trunc=function(t){return r(t).trunc()},a.add=function(t,n){return r(t).add(n)},a.plus=function(t,n){return r(t).add(n)},a.sub=function(t,n){return r(t).sub(n)},a.subtract=function(t,n){return r(t).sub(n)},a.minus=function(t,n){return r(t).sub(n)},a.mul=function(t,n){return r(t).mul(n)},a.multiply=function(t,n){return r(t).mul(n)},a.times=function(t,n){return r(t).mul(n)},a.div=function(t,n){return r(t).div(n)},a.divide=function(t,n){return r(t).div(n)},a.recip=function(t){return r(t).recip()},a.reciprocal=function(t){return r(t).recip()},a.reciprocate=function(t){return r(t).reciprocate()},a.cmp=function(t,n){return r(t).cmp(n)},a.compare=function(t,n){return r(t).cmp(n)},a.eq=function(t,n){return r(t).eq(n)},a.equals=function(t,n){return r(t).eq(n)},a.neq=function(t,n){return r(t).neq(n)},a.notEquals=function(t,n){return r(t).notEquals(n)},a.lt=function(t,n){return r(t).lt(n)},a.lte=function(t,n){return r(t).lte(n)},a.gt=function(t,n){return r(t).gt(n)},a.gte=function(t,n){return r(t).gte(n)},a.max=function(t,n){return r(t).max(n)},a.min=function(t,n){return r(t).min(n)},a.clamp=function(t,n,e){return r(t).clamp(n,e)},a.clampMin=function(t,n){return r(t).clampMin(n)},a.clampMax=function(t,n){return r(t).clampMax(n)},a.cmp_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.compare_tolerance=function(t,n,e){return r(t).cmp_tolerance(n,e)},a.eq_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.equals_tolerance=function(t,n,e){return r(t).eq_tolerance(n,e)},a.neq_tolerance=function(t,n,e){return r(t).neq_tolerance(n,e)},a.notEquals_tolerance=function(t,n,e){return r(t).notEquals_tolerance(n,e)},a.lt_tolerance=function(t,n,e){return r(t).lt_tolerance(n,e)},a.lte_tolerance=function(t,n,e){return r(t).lte_tolerance(n,e)},a.gt_tolerance=function(t,n,e){return r(t).gt_tolerance(n,e)},a.gte_tolerance=function(t,n,e){return r(t).gte_tolerance(n,e)},a.log10=function(t){return r(t).log10()},a.absLog10=function(t){return r(t).absLog10()},a.pLog10=function(t){return r(t).pLog10()},a.log=function(t,n){return r(t).log(n)},a.log2=function(t){return r(t).log2()},a.ln=function(t){return r(t).ln()},a.logarithm=function(t,n){return r(t).logarithm(n)},a.pow10=function(t){return Number.isInteger(t)?o(1,t):i(Math.pow(10,t%1),Math.trunc(t))},a.pow=function(t,n){return\"number\"==typeof t&&10===t&&\"number\"==typeof n&&Number.isInteger(n)?o(1,n):r(t).pow(n)},a.exp=function(t){return r(t).exp()},a.sqr=function(t){return r(t).sqr()},a.sqrt=function(t){return r(t).sqrt()},a.cube=function(t){return r(t).cube()},a.cbrt=function(t){return r(t).cbrt()},a.dp=function(t){return r(t).dp()},a.decimalPlaces=function(t){return r(t).dp()},a.affordGeometricSeries=function(t,n,e,i){return u(r(t),r(n),r(e),i)},a.sumGeometricSeries=function(t,n,e,i){return s(t,r(n),r(e),i)},a.affordArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e)).sub(e.div(2)),o=i.pow(2);return i.neg().add(o.add(e.mul(t).mul(2)).sqrt()).div(e).floor()}(r(t),r(n),r(e),r(i))},a.sumArithmeticSeries=function(t,n,e,i){return function(t,n,e,r){var i=n.add(r.mul(e));return t.div(2).mul(i.mul(2).plus(t.sub(1).mul(e)))}(r(t),r(n),r(e),r(i))},a.efficiencyOfPurchase=function(t,n,e){return function(t,n,e){return t.div(n).add(t.div(e))}(r(t),r(n),r(e))},a.randomDecimalForTesting=function(t){if(20*Math.random()<1)return o(0,0);var n=10*Math.random();10*Math.random()<1&&(n=Math.round(n)),n*=Math.sign(2*Math.random()-1);var e=Math.floor(Math.random()*t*2)-t;return i(n,e)},a.prototype.normalize=function(){if(this.m>=1&&this.m<10)return this;if(0===this.m)return this.m=0,this.e=0,this;var t=Math.floor(Math.log10(Math.abs(this.m)));return this.m=-324===t?10*this.m/1e-323:this.m/e(t),this.e+=t,this},a.prototype.fromMantissaExponent=function(t,n){return isFinite(t)&&isFinite(n)?(this.m=t,this.e=n,this.normalize(),this):(t=Number.NaN,n=Number.NaN,this)},a.prototype.fromMantissaExponent_noNormalize=function(t,n){return this.m=t,this.e=n,this},a.prototype.fromDecimal=function(t){return this.m=t.m,this.e=t.e,this},a.prototype.fromNumber=function(t){return isNaN(t)?(this.m=Number.NaN,this.e=Number.NaN):t===Number.POSITIVE_INFINITY?(this.m=1,this.e=n):t===Number.NEGATIVE_INFINITY?(this.m=-1,this.e=n):0===t?(this.m=0,this.e=0):(this.e=Math.floor(Math.log10(Math.abs(t))),this.m=-324===this.e?10*t/1e-323:t/e(this.e),this.normalize()),this},a.prototype.fromString=function(t){if(-1!==t.indexOf(\"e\")){var n=t.split(\"e\");this.m=parseFloat(n[0]),this.e=parseFloat(n[1]),this.normalize()}else if(\"NaN\"===t)this.m=Number.NaN,this.e=Number.NaN;else if(this.fromNumber(parseFloat(t)),isNaN(this.m))throw Error(\"[DecimalError] Invalid argument: \"+t);return this},a.prototype.fromValue=function(t){return t instanceof a?this.fromDecimal(t):\"number\"==typeof t?this.fromNumber(t):\"string\"==typeof t?this.fromString(t):(this.m=0,this.e=0,this)},a.prototype.toNumber=function(){if(!isFinite(this.e))return Number.NaN;if(this.e>308)return this.m>0?Number.POSITIVE_INFINITY:Number.NEGATIVE_INFINITY;if(this.e<-324)return 0;if(-324===this.e)return this.m>0?5e-324:-5e-324;var t=this.m*e(this.e);if(!isFinite(t)||this.e<0)return t;var n=Math.round(t);return Math.abs(n-t)<1e-10?n:t},a.prototype.mantissaWithDecimalPlaces=function(t){if(isNaN(this.m)||isNaN(this.e))return Number.NaN;if(0===this.m)return 0;var n=t+1,e=Math.ceil(Math.log10(Math.abs(this.m))),r=Math.round(this.m*Math.pow(10,n-e))*Math.pow(10,e-n);return parseFloat(r.toFixed(Math.max(n-e,0)))},a.prototype.toString=function(){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\":this.e<21&&this.e>-7?this.toNumber().toString():this.m+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toExponential=function(e){if(isNaN(this.m)||isNaN(this.e))return\"NaN\";if(this.e>=n)return this.m>0?\"Infinity\":\"-Infinity\";if(this.e<=-n||0===this.m)return\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\")+\"e+0\";if(this.e>-324&&this.e<308)return this.toNumber().toExponential(e);isFinite(e)||(e=17);var r=e+1,i=Math.max(1,Math.ceil(Math.log10(Math.abs(this.m))));return(Math.round(this.m*Math.pow(10,r-i))*Math.pow(10,i-r)).toFixed(Math.max(r-i,0))+\"e\"+(this.e>=0?\"+\":\"\")+this.e},a.prototype.toFixed=function(e){return isNaN(this.m)||isNaN(this.e)?\"NaN\":this.e>=n?this.m>0?\"Infinity\":\"-Infinity\":this.e<=-n||0===this.m?\"0\"+(e>0?t(\".\",e+1,\"0\"):\"\"):this.e>=17?this.m.toString().replace(\".\",\"\").padEnd(this.e+1,\"0\")+(e>0?t(\".\",e+1,\"0\"):\"\"):this.toNumber().toFixed(e)},a.prototype.toPrecision=function(t){return this.e<=-7?this.toExponential(t-1):t>this.e?this.toFixed(t-this.e-1):this.toExponential(t-1)},a.prototype.valueOf=function(){return this.toString()},a.prototype.toJSON=function(){return this.toString()},a.prototype.toStringWithDecimalPlaces=function(t){return this.toExponential(t)},a.prototype.abs=function(){return o(Math.abs(this.m),this.e)},a.prototype.neg=function(){return o(-this.m,this.e)},a.prototype.negate=function(){return this.neg()},a.prototype.negated=function(){return this.neg()},a.prototype.sign=function(){return Math.sign(this.m)},a.prototype.sgn=function(){return this.sign()},a.prototype.round=function(){return this.e<-1?new a(0):this.e<17?new a(Math.round(this.toNumber())):this},a.prototype.floor=function(){return this.e<-1?Math.sign(this.m)>=0?new a(0):new a(-1):this.e<17?new a(Math.floor(this.toNumber())):this},a.prototype.ceil=function(){return this.e<-1?Math.sign(this.m)>0?new a(1):new a(0):this.e<17?new a(Math.ceil(this.toNumber())):this},a.prototype.trunc=function(){return this.e<0?new a(0):this.e<17?new a(Math.trunc(this.toNumber())):this},a.prototype.add=function(t){var n,o,u=r(t);if(0===this.m)return u;if(0===u.m)return this;if(this.e>=u.e?(n=this,o=u):(n=u,o=this),n.e-o.e>17)return n;var s=Math.round(1e14*n.m+1e14*o.m*e(o.e-n.e));return i(s,n.e-14)},a.prototype.plus=function(t){return this.add(t)},a.prototype.sub=function(t){return this.add(r(t).neg())},a.prototype.subtract=function(t){return this.sub(t)},a.prototype.minus=function(t){return this.sub(t)},a.prototype.mul=function(t){if(\"number\"==typeof t)return t<1e307&&t>-1e307?i(this.m*t,this.e):i(1e-307*this.m*t,this.e+307);var n=\"string\"==typeof t?new a(t):t;return i(this.m*n.m,this.e+n.e)},a.prototype.multiply=function(t){return this.mul(t)},a.prototype.times=function(t){return this.mul(t)},a.prototype.div=function(t){return this.mul(r(t).recip())},a.prototype.divide=function(t){return this.div(t)},a.prototype.divideBy=function(t){return this.div(t)},a.prototype.dividedBy=function(t){return this.div(t)},a.prototype.recip=function(){return i(1/this.m,-this.e)},a.prototype.reciprocal=function(){return this.recip()},a.prototype.reciprocate=function(){return this.recip()},a.prototype.cmp=function(t){var n=r(t);if(0===this.m){if(0===n.m)return 0;if(n.m<0)return 1;if(n.m>0)return-1}if(0===n.m){if(this.m<0)return-1;if(this.m>0)return 1}if(this.m>0)return n.m<0||this.e>n.e?1:this.e<n.e?-1:this.m>n.m?1:this.m<n.m?-1:0;if(this.m<0)return n.m>0||this.e>n.e?-1:this.e<n.e||this.m>n.m?1:this.m<n.m?-1:0;throw Error(\"Unreachable code\")},a.prototype.compare=function(t){return this.cmp(t)},a.prototype.eq=function(t){var n=r(t);return this.e===n.e&&this.m===n.m},a.prototype.equals=function(t){return this.eq(t)},a.prototype.neq=function(t){return!this.eq(t)},a.prototype.notEquals=function(t){return this.neq(t)},a.prototype.lt=function(t){var n=r(t);return 0===this.m?n.m>0:0===n.m?this.m<=0:this.e===n.e?this.m<n.m:this.m>0?n.m>0&&this.e<n.e:n.m>0||this.e>n.e},a.prototype.lte=function(t){return!this.gt(t)},a.prototype.gt=function(t){var n=r(t);return 0===this.m?n.m<0:0===n.m?this.m>0:this.e===n.e?this.m>n.m:this.m>0?n.m<0||this.e>n.e:n.m<0&&this.e<n.e},a.prototype.gte=function(t){return!this.lt(t)},a.prototype.max=function(t){var n=r(t);return this.lt(n)?n:this},a.prototype.min=function(t){var n=r(t);return this.gt(n)?n:this},a.prototype.clamp=function(t,n){return this.max(t).min(n)},a.prototype.clampMin=function(t){return this.max(t)},a.prototype.clampMax=function(t){return this.min(t)},a.prototype.cmp_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)?0:this.cmp(e)},a.prototype.compare_tolerance=function(t,n){return this.cmp_tolerance(t,n)},a.prototype.eq_tolerance=function(t,n){var e=r(t);return a.lte(this.sub(e).abs(),a.max(this.abs(),e.abs()).mul(n))},a.prototype.equals_tolerance=function(t,n){return this.eq_tolerance(t,n)},a.prototype.neq_tolerance=function(t,n){return!this.eq_tolerance(t,n)},a.prototype.notEquals_tolerance=function(t,n){return this.neq_tolerance(t,n)},a.prototype.lt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.lt(e)},a.prototype.lte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.lt(e)},a.prototype.gt_tolerance=function(t,n){var e=r(t);return!this.eq_tolerance(e,n)&&this.gt(e)},a.prototype.gte_tolerance=function(t,n){var e=r(t);return this.eq_tolerance(e,n)||this.gt(e)},a.prototype.log10=function(){return this.e+Math.log10(this.m)},a.prototype.absLog10=function(){return this.e+Math.log10(Math.abs(this.m))},a.prototype.pLog10=function(){return this.m<=0||this.e<0?0:this.log10()},a.prototype.log=function(t){return Math.LN10/Math.log(t)*this.log10()},a.prototype.log2=function(){return 3.321928094887362*this.log10()},a.prototype.ln=function(){return 2.302585092994045*this.log10()},a.prototype.logarithm=function(t){return this.log(t)},a.prototype.pow=function(t){var n,e=t instanceof a?t.toNumber():t,r=this.e*e;if(Number.isSafeInteger(r)&&(n=Math.pow(this.m,e),isFinite(n)&&0!==n))return i(n,r);var o=Math.trunc(r),u=r-o;if(n=Math.pow(10,e*Math.log10(this.m)+u),isFinite(n)&&0!==n)return i(n,o);var s=a.pow10(e*this.absLog10());return-1===this.sign()?1===Math.abs(e%2)?s.neg():0===Math.abs(e%2)?s:new a(Number.NaN):s},a.prototype.pow_base=function(t){return r(t).pow(this)},a.prototype.factorial=function(){var t=this.toNumber()+1;return a.pow(t/Math.E*Math.sqrt(t*Math.sinh(1/t)+1/(810*Math.pow(t,6))),t).mul(Math.sqrt(2*Math.PI/t))},a.prototype.exp=function(){var t=this.toNumber();return-706<t&&t<709?a.fromNumber(Math.exp(t)):a.pow(Math.E,t)},a.prototype.sqr=function(){return i(Math.pow(this.m,2),2*this.e)},a.prototype.sqrt=function(){return this.m<0?new a(Number.NaN):this.e%2!=0?i(3.16227766016838*Math.sqrt(this.m),Math.floor(this.e/2)):i(Math.sqrt(this.m),Math.floor(this.e/2))},a.prototype.cube=function(){return i(Math.pow(this.m,3),3*this.e)},a.prototype.cbrt=function(){var t=1,n=this.m;n<0&&(t=-1,n=-n);var e=t*Math.pow(n,1/3),r=this.e%3;return i(1===r||-1===r?2.154434690031883*e:0!==r?4.641588833612778*e:e,Math.floor(this.e/3))},a.prototype.sinh=function(){return this.exp().sub(this.negate().exp()).div(2)},a.prototype.cosh=function(){return this.exp().add(this.negate().exp()).div(2)},a.prototype.tanh=function(){return this.sinh().div(this.cosh())},a.prototype.asinh=function(){return a.ln(this.add(this.sqr().add(1).sqrt()))},a.prototype.acosh=function(){return a.ln(this.add(this.sqr().sub(1).sqrt()))},a.prototype.atanh=function(){return this.abs().gte(1)?Number.NaN:a.ln(this.add(1).div(new a(1).sub(this)))/2},a.prototype.ascensionPenalty=function(t){return 0===t?this:this.pow(Math.pow(10,-t))},a.prototype.egg=function(){return this.add(9)},a.prototype.lessThanOrEqualTo=function(t){return this.cmp(t)<1},a.prototype.lessThan=function(t){return this.cmp(t)<0},a.prototype.greaterThanOrEqualTo=function(t){return this.cmp(t)>-1},a.prototype.greaterThan=function(t){return this.cmp(t)>0},a.prototype.decimalPlaces=function(){return this.dp()},a.prototype.dp=function(){if(!isFinite(this.mantissa))return NaN;if(this.exponent>=17)return 0;for(var t=this.mantissa,n=-this.exponent,e=1;Math.abs(Math.round(t*e)/e-t)>1e-10;)e*=10,n++;return n>0?n:0},Object.defineProperty(a,\"MAX_VALUE\",{get:function(){return h},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"MIN_VALUE\",{get:function(){return c},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MAX_VALUE\",{get:function(){return p},enumerable:!1,configurable:!0}),Object.defineProperty(a,\"NUMBER_MIN_VALUE\",{get:function(){return f},enumerable:!1,configurable:!0}),a}(),h=o(1,n),c=o(1,-n),p=r(Number.MAX_VALUE),f=r(Number.MIN_VALUE);export default a;\n","'use strict';\n\nmodule.exports = function (string, maxLength, fillString) {\n\n  if (string == null || maxLength == null) {\n    return string;\n  }\n\n  var result    = String(string);\n  var targetLen = typeof maxLength === 'number'\n    ? maxLength\n    : parseInt(maxLength, 10);\n\n  if (isNaN(targetLen) || !isFinite(targetLen)) {\n    return result;\n  }\n\n\n  var length = result.length;\n  if (length >= targetLen) {\n    return result;\n  }\n\n\n  var filled = fillString == null ? '' : String(fillString);\n  if (filled === '') {\n    filled = ' ';\n  }\n\n\n  var fillLen = targetLen - length;\n\n  while (filled.length < fillLen) {\n    filled += filled;\n  }\n\n  var truncated = filled.length > fillLen ? filled.substr(0, fillLen) : filled;\n\n  return result + truncated;\n};\n","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import Decimal from \"break_infinity.js\";\r\nimport * as ADNotations from '@antimatter-dimensions/notations';\r\nconst mixedScientific=new ADNotations.MixedScientificNotation();\r\nlet resources={\r\n\tmoney:{amt:new Decimal(15)},\r\n\twheat:{amt:new Decimal(0),er:new Decimal(2)},\r\n\tcotton:{amt:new Decimal(0),er:new Decimal(5)},\r\n\tstone:{amt:new Decimal(0),er:new Decimal(3)},\r\n\tmetal:{amt:new Decimal(0),er:new Decimal(7)},\r\n\tcoal:{amt:new Decimal(0),er:new Decimal(4)}\r\n};\r\nlet previousResources={money:new Decimal(15),wheat:new Decimal(0),cotton:new Decimal(0),stone:new Decimal(0),metal:new Decimal(0),coal:new Decimal(0)};\r\nlet buildings={\r\n\tfarm:{amt:new Decimal(0),price:new Decimal(15),rate1:new Decimal(0.15),rate2:new Decimal(0.07)},\r\n\tmine:{amt:new Decimal(0),price:new Decimal(100),rate1:new Decimal(0.13),rate2:new Decimal(0.06),rate3:new Decimal(0.1)}\r\n};\r\nlet employees=[{intelligence:0}];\r\nexport function buyBuilding(building){\r\n\tif(resources.money.amt.greaterThanOrEqualTo(buildings[building].price)){\r\n\t\tresources.money.amt=resources.money.amt.minus(buildings[building].price);\r\n\t\tbuildings[building].price=buildings[building].price.times(1.2);\r\n\t\tbuildings[building].amt=buildings[building].amt.add(1);\r\n\t}\r\n}\r\nexport function buyWorker(){\r\n\r\n}\r\nfunction updateValues(){\r\n\tdocument.getElementById(\"money\").innerHTML=mixedScientific.format(resources.money.amt,2,2);\r\n\tdocument.getElementById(\"wheat\").innerHTML=mixedScientific.format(resources.wheat.amt,2,2);\r\n\tdocument.getElementById(\"cotton\").innerHTML=mixedScientific.format(resources.cotton.amt,2,2);\r\n\tdocument.getElementById(\"stone\").innerHTML=mixedScientific.format(resources.stone.amt,2,2);\r\n\tdocument.getElementById(\"metal\").innerHTML=mixedScientific.format(resources.metal.amt,2,2);\r\n\tdocument.getElementById(\"coal\").innerHTML=mixedScientific.format(resources.coal.amt,2,2);\r\n\tdocument.getElementById(\"farmCost\").innerHTML=mixedScientific.format(buildings.farm.price,2,2)+\" Money\";\r\n\tdocument.getElementById(\"farms\").innerHTML=mixedScientific.format(buildings.farm.amt,0,0)+\" Farms\";\r\n\tdocument.getElementById(\"mineCost\").innerHTML=mixedScientific.format(buildings.mine.price,2,2)+\" Money\";\r\n\tdocument.getElementById(\"mines\").innerHTML=mixedScientific.format(buildings.mine.amt,0,0)+\" Mines\";\r\n\tdocument.getElementById(\"moneyPS\").innerHTML=mixedScientific.format((resources.money.amt.minus(previousResources.money).times(20)),2,2);\r\n\tdocument.getElementById(\"wheatPS\").innerHTML=mixedScientific.format((resources.wheat.amt.minus(previousResources.wheat).times(20)),2,2);\r\n\tdocument.getElementById(\"cottonPS\").innerHTML=mixedScientific.format((resources.cotton.amt.minus(previousResources.cotton).times(20)),2,2);\r\n\tdocument.getElementById(\"stonePS\").innerHTML=mixedScientific.format((resources.stone.amt.minus(previousResources.stone).times(20)),2,2);\r\n\tdocument.getElementById(\"metalPS\").innerHTML=mixedScientific.format((resources.metal.amt.minus(previousResources.metal).times(20)),2,2);\r\n\tdocument.getElementById(\"coalPS\").innerHTML=mixedScientific.format((resources.coal.amt.minus(previousResources.coal).times(20)),2,2);\r\n}\r\nexport function sellResources(){\r\n\tfor (let i = 1; i < Object.keys(resources).length; i++) {\r\n\t\tresources.money.amt=resources.money.amt.add((resources[Object.keys(resources)[i]].amt*resources[Object.keys(resources)[i]].er));\r\n\t\tresources[Object.keys(resources)[i]].amt=new Decimal(0);\r\n\t}\r\n}\r\nfunction storePastValues(){\r\n\tfor (let i = 0; i < Object.keys(resources).length; i++) {\r\n\t\tpreviousResources[Object.keys(resources)[i]]=resources[Object.keys(resources)[i]].amt;\r\n\t}\r\n}\r\nexport function changeWorkerAmount(building,amount){\r\n\r\n}\r\nsetInterval(function(){\r\n\tstorePastValues();\r\n\tresources.wheat.amt=resources.wheat.amt.add(buildings.farm.amt.times(buildings.farm.rate1.dividedBy(20)));\r\n\tresources.cotton.amt=resources.cotton.amt.add(buildings.farm.amt.times(buildings.farm.rate2.dividedBy(20)));\r\n\tresources.stone.amt=resources.stone.amt.add(buildings.mine.amt.times(buildings.mine.rate1.dividedBy(20)));\r\n\tresources.metal.amt=resources.metal.amt.add(buildings.mine.amt.times(buildings.mine.rate2.dividedBy(20)));\r\n\tresources.coal.amt=resources.coal.amt.add(buildings.mine.amt.times(buildings.mine.rate3.dividedBy(20)));\r\n\tdocument.title = \"$\"+mixedScientific.format(resources.money.amt,2,2)+\" - Dynasty Incremental\";\r\n\tupdateValues();\r\n},50);"],"names":[],"sourceRoot":""}